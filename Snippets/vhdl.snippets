snippet library "std and numeric libraries"
library ieee;
	use ieee.std_logic_1164.all;
	use ieee.numeric_std.all;
endsnippet

snippet signal 
signal $1 : $2 
endsnippet

snippet variable
variable $1 : $2
endsnippet

snippet process "clocked process"
$1 : process(${2:clk})
	$3
begin
	if rising_edge($2)

	end if; --rising_edge
end process $1;	
endsnippet

#== type declarations
snippet unsigned "unsigned x downto 0"
unsigned($1 downto 0);
endsnippet

snippet signed "signed x downto 0"
signed($1 downto 0);
endsnippet

snippet std_logic_vector 
std_logic_vector($1 downto 0);
endsnippet

snippet std_logic	
std_logic;
endsnippet

snippet test_python "simple" !b
`!p snip.rv = "hello"`
endsnippet

snippet uuid "UUID" !b
`!p import uuid
if not snip.c:
	snip.rv =uuid.uuid4().hex`
endsnippet
